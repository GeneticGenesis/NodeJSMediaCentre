var plexServer = process.env.PLEX_SERVER;

var PlexAPI = require("plex-api");
var client = new PlexAPI(plexServer);

var tvShowsId = 1;

// FIXME: Logging!

// FIXME: This module is in desperate need of some error handling, however with a lack of
// documentation on plex-api's behaviour, its an uphill battle.

// The next 2 functions are terrifying, but I can't find a better way to flag items as watched
// or un-watched in the API. The identifier cannot be changed as far as I can tell.
// They can also be performed to reset the flags at any point in the heirarchy.
var flagAsWatched = function(req, res, next) {
    console.log(req.params.key);
    client.perform('/:/scrobble?key=' + req.params.key + '&identifier=com.plexapp.plugins.library').then(function () {
	res.send(200, 'ok');
    }, function (err) {
	res.send(500, 'error');
	throw new Error("Could not connect to server");
    });
}

var flagAsUnwatched = function(req, res, next) {
    client.perform('/:/unscrobble?key=' + req.params.key + '&identifier=com.plexapp.plugins.library').then(function () {
	res.send(200, 'ok');
    }, function (err) {
	res.send(500, 'error');
	throw new Error("Could not connect to server");
    });
}

var getAllTvShows = function(req, res, next) {

    client.query("/library/sections/" + tvShowsId  + "/all").then(function (result) {
	res.send(200, result.directory);
    }, function (err) {
	throw new Error("Could not connect to server");
    });
}

var getChildrenByKey = function(req, res, next) {

    client.query('/library/metadata/' + req.params.key + '/children').then(function (result) {

	if (result.directory) {
	    res.send(200, result.directory);
	}
	else if (result.video) {
	    res.send(200, result.video);
	}
	else {
	    res.send(500, "Can't yet handle this return from the API. Check the logs for more details.");
	}
	
    }, function (err) {
	throw new Error("Could not connect to server");
    });
}

// Expose API
exports.getAllTvShows = getAllTvShows;
exports.getChildrenByKey = getChildrenByKey;
exports.flagAsWatched = flagAsWatched;
exports.flagAsUnwatched = flagAsUnwatched;
